---
# tasks file for ansible-role-iim
- name: Install setfacl and (un)zip on Debian
  become: yes
  apt:
    name:
      - 'libacl1'
      - 'unzip'
    state: present
    update_cache: yes
    force_apt_get: yes
    cache_valid_time: 3600
  when: ansible_os_family == "Debian"

- name: Install setfacl and unzip on RedHat
  become: yes
  yum:
    name:
      - 'acl'
      - 'unzip'
    state: present
  when: ansible_os_family == "RedHat"

- name: Create the {{ __ibm_user }} user
  become: true
  become_user: root
  user:
    name: "{{ __ibm_user }}"

- name: Create the {{ __install_root }} directory
  become: true
  become_user: root
  file:
    path: "{{ __install_root }}"
    state: directory
    owner: "{{ __ibm_user }}"
    group: "{{ __ibm_user }}"
    mode: 0750

- name: Get the version of an IIM already installed
  become: true
  become_user: "{{ __iim_user }}"
  shell:
    grep version ~{{ __iim_user }}/etc/.ibm/registry/InstallationManager.dat | cut -d= -f2
  ignore_errors: true
  changed_when: false
  register: installed

- name: Create the {{ __iim_repo }} directory
  become: true
  become_user: root
  file:
    path: "{{ __iim_repo }}"
    state: directory
    mode: "{{ __iim_mode }}"
    owner: "{{ __iim_user }}"
    group: "{{ __iim_group }}"
  when: (iim_local_src is not defined) and ((not installed.stdout) or (installed.stdout is version_compare(__iim_version, '<')))

- name: Unzip agent installer package to {{ __iim_repo }}
  become: true
  become_user: "{{ __iim_user }}"
  unarchive:
    src: "{{ __iim_installerpackage }}"
    dest: "{{ __iim_repo }}"
    creates: "{{ __iim_repo }}/userinst"

- name: Run the IIM installer from {{ __iim_repo }} to install IIM at {{ __iim_path }}
  become: true
  become_user: "{{ __iim_user }}"
  command:
    '{{ __iim_repo }}/userinstc -acceptLicense -installationDirectory "{{ __iim_path }}"'
  when: (not installed.stdout) or (installed.stdout is version_compare(__iim_version, '<'))
